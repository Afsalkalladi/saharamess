services:
  - type: web
    name: sahara-mess-management
    env: python
    buildCommand: "pip install -r requirements.txt && python manage.py collectstatic --noinput && python manage.py migrate"
    startCommand: "gunicorn mess_management.wsgi:application"
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: mess_management.settings.production
      - key: PYTHON_VERSION
        value: 3.12.0
      - key: DATABASE_URL
        fromDatabase:
          name: sahara-mess-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: sahara-mess-redis
          property: connectionString

  - type: worker
    name: sahara-mess-celery
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery -A mess_management worker --loglevel=info"
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: mess_management.settings.production
      - key: DATABASE_URL
        fromDatabase:
          name: sahara-mess-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: sahara-mess-redis
          property: connectionString

  - type: worker
    name: sahara-mess-telegram-bot
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "python manage.py run_telegram_bot --polling"
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: mess_management.settings.production
      - key: DATABASE_URL
        fromDatabase:
          name: sahara-mess-db
          property: connectionString

databases:
  - name: sahara-mess-db
    databaseName: mess_management
    user: mess_user

services:
  - type: redis
    name: sahara-mess-redis
    maxmemoryPolicy: allkeys-lru
