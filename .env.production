# =============================================================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# =============================================================================
# ‚ö†Ô∏è  CRITICAL: Replace ALL placeholder values before deployment
# üîí SECURITY: Never commit this file to version control

# =============================================================================
# DJANGO CORE SETTINGS
# =============================================================================
DJANGO_SETTINGS_MODULE=mess_management.settings.production
DEBUG=False
SECRET_KEY=your-super-secret-production-key-minimum-50-characters-long-change-this-immediately
ALLOWED_HOSTS=your-app-name.onrender.com,yourdomain.com,localhost

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# üîó Get from Render PostgreSQL service dashboard
DATABASE_URL=postgresql://postgres:password@dpg-xxxxx-a.oregon-postgres.render.com:5432/mess_management_db

# =============================================================================
# REDIS CONFIGURATION (Choose one option)
# =============================================================================
# Option 1: Upstash Redis (Free tier: 10K commands/day)
# Get from: https://upstash.com
REDIS_URL=redis://default:password@us1-xxxxx.upstash.io:6379

# Option 2: Redis Labs (Free tier: 30MB)
# Get from: https://redis.com/try-free/
# REDIS_URL=redis://default:password@redis-xxxxx.c1.us-east-1-2.ec2.cloud.redislabs.com:6379

# Option 3: Disable Redis (Celery runs synchronously)
# REDIS_URL=

# =============================================================================
# TELEGRAM BOT CONFIGURATION (REQUIRED)
# =============================================================================
# ü§ñ Get token from @BotFather on Telegram
# 1. Message @BotFather ‚Üí /newbot ‚Üí follow instructions
# 2. Copy token (format: 1234567890:ABCdefGHI...)
TELEGRAM_BOT_TOKEN=1234567890:ABCdefGHIjklMNOpqrsTUVwxyz-CHANGE-THIS

# üë• Get your Telegram ID from @userinfobot
# Multiple admins: separate with commas
ADMIN_TG_IDS=123456789,987654321

# =============================================================================
# SECURITY SETTINGS
# =============================================================================
# üîê Generate 32-character random string for QR codes
# Use: python -c "import secrets; print(secrets.token_urlsafe(32))"
QR_SECRET=your-32-character-secret-for-qr-code-generation-change-this
QR_SECRET_VERSION=1

# üîë Staff scanner admin password (strong password required)
STAFF_SCANNER_PASSWORD=your-very-secure-admin-password-123

# üõ°Ô∏è SSL and Security Headers
SECURE_SSL_REDIRECT=True
SECURE_PROXY_SSL_HEADER=HTTP_X_FORWARDED_PROTO,https
CSRF_COOKIE_SECURE=True
SESSION_COOKIE_SECURE=True
SECURE_BROWSER_XSS_FILTER=True
SECURE_CONTENT_TYPE_NOSNIFF=True
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True

# =============================================================================
# CLOUDINARY CONFIGURATION (Image Storage)
# =============================================================================
# üì∏ Get from: https://cloudinary.com (Free tier: 25GB storage, 25GB bandwidth)
# Required for: Profile pictures, QR codes, meal images
CLOUDINARY_CLOUD_NAME=your-cloudinary-cloud-name
CLOUDINARY_API_KEY=123456789012345
CLOUDINARY_API_SECRET=your-cloudinary-api-secret

# =============================================================================
# GOOGLE SHEETS INTEGRATION (Optional - for backup logging)
# =============================================================================
# üìä Get from: https://console.cloud.google.com
# 1. Create service account ‚Üí Download JSON credentials
# 2. Share spreadsheet with service account email
SHEETS_CREDENTIALS_JSON={"type":"service_account","project_id":"your-project","private_key_id":"key-id","private_key":"-----BEGIN PRIVATE KEY-----\nYOUR-PRIVATE-KEY\n-----END PRIVATE KEY-----\n","client_email":"service-account@project.iam.gserviceaccount.com","client_id":"123456789","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"https://www.googleapis.com/robot/v1/metadata/x509/service-account%40project.iam.gserviceaccount.com"}
SHEETS_SPREADSHEET_ID=1ABCdefGHIjklMNOpqrsTUVwxyz123456789

# =============================================================================
# EMAIL CONFIGURATION (Optional - for notifications)
# =============================================================================
# üìß Gmail SMTP (recommended)
# 1. Enable 2FA on Gmail
# 2. Generate App Password: https://myaccount.google.com/apppasswords
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-16-character-app-password
DEFAULT_FROM_EMAIL=Mess Management <your-email@gmail.com>

# =============================================================================
# PERFORMANCE SETTINGS
# =============================================================================
# üöÄ Celery Worker Configuration
CELERY_WORKER_CONCURRENCY=2
CELERY_TASK_SOFT_TIME_LIMIT=300
CELERY_TASK_TIME_LIMIT=600

# üåê Gunicorn Web Server Configuration
GUNICORN_WORKERS=4
GUNICORN_TIMEOUT=120
GUNICORN_MAX_REQUESTS=1000
GUNICORN_MAX_REQUESTS_JITTER=100

# üíæ Cache Configuration
CACHE_TTL=300
SESSION_COOKIE_AGE=86400

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
# üïê Time Zone (India Standard Time)
TIMEZONE=Asia/Kolkata

# üçΩÔ∏è Mess Configuration
MESS_CUTOFF_TIME=23:00
MESS_NAME=Sahara Mess Management

# üì± QR Code Settings
QR_CODE_SIZE=300
QR_CODE_BORDER=4

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOG_LEVEL=INFO
DJANGO_LOG_LEVEL=INFO
CELERY_LOG_LEVEL=INFO

# =============================================================================
# BACKUP AND RETENTION SETTINGS
# =============================================================================
# üóÑÔ∏è Data Retention (days)
BACKUP_RETENTION_DAYS=90
SCAN_EVENT_RETENTION_DAYS=30
PAYMENT_HISTORY_RETENTION_DAYS=365

# =============================================================================
# NOTIFICATION SETTINGS
# =============================================================================
# ‚è∞ Daily Report Time (24-hour format)
DAILY_REPORT_TIME=08:00

# üì¢ Notification Preferences
ENABLE_EMAIL_NOTIFICATIONS=True
ENABLE_TELEGRAM_NOTIFICATIONS=True
ENABLE_SMS_NOTIFICATIONS=False

# =============================================================================
# MONITORING AND HEALTH CHECKS
# =============================================================================
# üè• Health Check Configuration
HEALTH_CHECK_TIMEOUT=30
DATABASE_HEALTH_CHECK=True
REDIS_HEALTH_CHECK=True
TELEGRAM_HEALTH_CHECK=True

# =============================================================================
# RATE LIMITING
# =============================================================================
# üõ°Ô∏è API Rate Limits (requests per minute)
API_RATE_LIMIT=100
SCANNER_RATE_LIMIT=60
ADMIN_RATE_LIMIT=200

# =============================================================================
# FILE UPLOAD SETTINGS
# =============================================================================
# üìÅ File Upload Limits
MAX_UPLOAD_SIZE=10485760  # 10MB
ALLOWED_IMAGE_TYPES=jpg,jpeg,png,webp
ALLOWED_DOCUMENT_TYPES=pdf,doc,docx

# =============================================================================
# MANUAL PAYMENT VERIFICATION SYSTEM
# =============================================================================
# üí∞ Manual Payment Verification (No Gateway Required)
ENABLE_MANUAL_PAYMENT_VERIFICATION=True
PAYMENT_CURRENCY=INR
MINIMUM_PAYMENT_AMOUNT=100

# üìä Google Sheets for Payment Tracking & Approval
# Required: Service account with Sheets API access
PAYMENT_VERIFICATION_SHEET_ID=your-payment-verification-spreadsheet-id
PAYMENT_VERIFICATION_SHEET_NAME=PaymentVerification

# üì∏ Payment Receipt Storage
# Students upload payment screenshots to Cloudinary
PAYMENT_RECEIPT_FOLDER=payment_receipts
MAX_RECEIPT_SIZE=5242880  # 5MB
ALLOWED_RECEIPT_FORMATS=jpg,jpeg,png,pdf

# ü§ñ Telegram Admin Notifications
PAYMENT_NOTIFICATION_CHAT_ID=your-admin-group-chat-id
ENABLE_TELEGRAM_PAYMENT_BUTTONS=True

# ‚è∞ Payment Verification Settings
PAYMENT_PENDING_TIMEOUT_HOURS=48
AUTO_REMINDER_INTERVAL_HOURS=24
PAYMENT_VERIFICATION_WEBHOOK_SECRET=your-webhook-secret-32-chars

# =============================================================================
# DEVELOPMENT/DEBUG SETTINGS (Keep False in production)
# =============================================================================
ENABLE_DEBUG_TOOLBAR=False
ENABLE_SILK_PROFILING=False
ENABLE_TEST_ENDPOINTS=False

# =============================================================================
# CORS SETTINGS (if using separate frontend)
# =============================================================================
CORS_ALLOWED_ORIGINS=https://your-frontend-domain.com
CORS_ALLOW_CREDENTIALS=True

# =============================================================================
# STATIC FILES AND MEDIA
# =============================================================================
# üìÇ Static Files (handled by Render automatically)
STATIC_URL=/static/
MEDIA_URL=/media/

# üåê CDN Configuration (optional)
# AWS_S3_CUSTOM_DOMAIN=your-cdn-domain.com
# USE_S3_STATIC_FILES=False
